version: '3.7'
services:

    postgres:                                           # create postgres container
        image: postgres:9.6
        container_name: postgres_container
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow

    airflow:                                            # create airflow container
        build: './airflow_docker'                       # construct the container along the Dockerfile in this folder
        container_name: airflow_container
        restart: always
        depends_on:
            - postgres
        environment:
            - LOAD_EX=n
            - EXECUTOR=Local
        volumes:                                        # mount the following local folders
            - ./airflow_docker/dags:/usr/local/airflow/dags
            - ./airflow_docker/data:/usr/local/airflow/data
        ports:
            - "8080:8080"                               # expose port
        command: webserver
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    zookeeper:
        image: wurstmeister/zookeeper:latest
        container_name: zookeeper
        expose:
            - "2181"
        volumes:
            - kafka_zookeeper:/opt/zookeeper-3.4.13/data
        networks:
            kafkanet:
                ipv4_address: 172.25.0.11

        kafka1:
            image: wurstmeister/kafka:2.12-2.2.0
            container_name: kafka1
            command: [ start-kafka.sh ]
            expose:
                - "8080"
                - "9092"
            environment:
                KAFKA_ADVERTISED_HOST_NAME: 172.25.0.12
                KAFKA_ZOOKEEPER_CONNECT: 172.25.0.11:2181
                KAFKA_ADVERTISED_PORT: 9092
                KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml
            volumes:
                - ./kafka/prometheus:/prometheus
                - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
            networks:
                kafkanet:
                    ipv4_address: 172.25.0.12
            depends_on:
                - "zookeeper"

        kafka2:
            image: wurstmeister/kafka:2.12-2.2.0
            container_name: kafka2
            command: [ start-kafka.sh ]
            expose:
                - "8080"
                - "9092"
            environment:
                KAFKA_ADVERTISED_HOST_NAME: 172.25.0.13
                KAFKA_ZOOKEEPER_CONNECT: 172.25.0.11:2181
                KAFKA_ADVERTISED_PORT: 9092
                KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml
            volumes:
                - ./kafka/prometheus:/prometheus
                - kafka_kafka2:/opt/kafka_2.12-2.2.0/logs
            depends_on:
                - "zookeeper"
            networks:
                kafkanet:
                    ipv4_address: 172.25.0.13

        kafka_manager:
            image: hlebalbau/kafka-manager:1.3.3.18
            container_name: kafka_manager
            expose:
                - "9000"
            environment:
                ZK_HOSTS: "172.25.0.11:2181"
                APPLICATION_SECRET: "random-secret"
            command: -Dpidfile.path=/dev/null
            depends_on:
                - "zookeeper"
                - "kafka1"
                - "kafka2"
            networks:
                kafkanet:
                    ipv4_address: 172.25.0.14

        prometheus:
            image: prom/prometheus:v2.8.1
            container_name: prometheus
            expose:
                - "9090"
            volumes:
                - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
                - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml
            depends_on:
                - "zookeeper"
                - "kafka1"
                - "kafka2"
            networks:
                kafkanet:
                    ipv4_address: 172.25.0.15

        grafana:
            image: grafana/grafana:6.1.1
            container_name: grafana
            expose:
                - "3000"
            environment:
                - GF_SECURITY_ADMIN_PASSWORD=password
            volumes:
                - ./grafana/provisioning/:/etc/grafana/provisioning/
            depends_on:
                - "prometheus"
            networks:
                kafkanet:
                    ipv4_address: 172.25.0.16

    networks:
        kafkanet:
            name: kafkanet
            driver: bridge
            ipam:
                driver: default
                config:
                    - subnet: 172.25.0.0/16
                      gateway: 172.25.0.1

    volumes:
        kafka_zookeeper:
        kafka_kafka1:
        kafka_kafka2: