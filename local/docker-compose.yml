version: "3.7"
services:

#  zookeeper:
#    image: wurstmeister/zookeeper:latest
#    container_name: zookeeper
#    expose:
#      - "2181"
#    ports:
#      - 2181:2181
#    volumes:
#      - kafka_zookeeper:/opt/zookeeper-3.4.13/data
#
#  kafka1:
#    image: wurstmeister/kafka:2.12-2.2.0
#    container_name: kafka1
#    command: [start-kafka.sh]
#    expose:
#      - "9092"
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_PORT: 9092
#      KAFKA_ADVERTISED_HOST_NAME: kafka1
#      KAFKA_CREATE_TOPICS: "transactions:1:1,locations:1:1"
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:19092
#      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://0.0.0.0:19092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      EXTRA_ARGS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml
#    volumes:
#      - ./kafka/prometheus:/prometheus
#      - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
#    depends_on:
#      - "zookeeper"
#
#  kafka2:
#    image: wurstmeister/kafka:2.12-2.2.0
#    container_name: kafka2
#    command: [start-kafka.sh]
#    expose:
#      - "9093"
#    ports:
#      - 9093:9092
#      - 8081:8080
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_HOST_NAME: kafk2
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9093,OUTSIDE://localhost:19093
#      KAFKA_LISTENERS: INSIDE://:9093,OUTSIDE://0.0.0.0:19093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      EXTRA_ARGS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml
#    volumes:
#      - ./kafka/prometheus:/prometheus
#      - kafka_kafka2:/opt/kafka_2.12-2.2.0/logs
#    depends_on:
#      - "zookeeper"
#
#
#  kafka_manager:
#    image: hlebalbau/kafka-manager:1.3.3.18
#    container_name: kafka_manager
#    expose:
#      - "9000"
#    ports:
#      - 9000:9000
#    environment:
#      ZK_HOSTS: "zookeeper:2181"
#      APPLICATION_SECRET: "random-secret"
#    command: -Dpidfile.path=/dev/null
#    depends_on:
#      - "zookeeper"
#      - "kafka1"
#      - "kafka2"
#
#  prometheus:
#    image: prom/prometheus:v2.8.1
#    container_name: prometheus
#    expose:
#      - "9090"
#    ports:
#      - 9090:9090
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml
#    depends_on:
#      - "zookeeper"
#      - "kafka1"
#      - "kafka2"
#    links:
#      - kafka1
#      - kafka2
#      - alertmanager
#
#  alertmanager:
#    image: prom/alertmanager
#    container_name: alertmanager
#    privileged: true
#    ports:
#      - '9096:9093'
#
#  grafana:
#    image: grafana/grafana:6.1.1
#    container_name: grafana
#    expose:
#      - "3000"
#    ports:
#      - 3000:3000
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=password
#    volumes:
#      - ./grafana/provisioning/:/etc/grafana/provisioning/
#    depends_on:
#      - "prometheus"
#    links:
#      - prometheus:prometheus

  postgres: # create postgres container
    image: postgres:9.6
    container_name: postgres_container
    environment:
        - POSTGRES_USER=airflow
        - POSTGRES_PASSWORD=airflow
        - POSTGRES_DB=airflow

  redis:
    image: 'redis:3.2.7'

  airflow: # create airflow container
      build: './airflow_docker'
#      image: puckel/docker-airflow:1.8.1                    # construct the container along the Dockerfile in this folder
      container_name: airflow_container
      restart: always
      depends_on:
          - postgres
          - redis
      environment:
          - LOAD_EX=n
          - EXECUTOR=Celery
          - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
          - PATH=$PATH:/usr/local/airflow/.local/bin/
      volumes: # mount the following local folders
          - ./airflow_docker/dags:/usr/local/airflow/dags
          - ./airflow_docker/data:/usr/local/airflow/data
          - ./airflow_docker/requirements.txt:/requirements.txt
      ports:
          - "8080:8080"                               # expose port
      command: webserver
      healthcheck:
          test: [ "CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]" ]
          interval: 30s
          timeout: 30s
          retries: 3

  flower:
    image: puckel/docker-airflow:1.8.1
    restart: always
    depends_on:
      - redis
    environment:
      - EXECUTOR=Celery
    ports:
      - "5555:5555"
    command: flower

  scheduler:
    image: puckel/docker-airflow:1.8.1
    restart: always
    depends_on:
      - airflow
    volumes: # mount the following local folders
        - ./airflow_docker/dags:/usr/local/airflow/dags
    environment:
      - LOAD_EX=y
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    command: scheduler

  worker:
    image: puckel/docker-airflow:1.8.1
    restart: always
    depends_on:
      - scheduler
    volumes: # mount the following local folders
        - ./airflow_docker/dags:/usr/local/airflow/dags
    environment:
      - FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - EXECUTOR=Celery
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    command: worker




volumes:
  kafka_zookeeper:
  kafka_kafka1:
  kafka_kafka2:
